<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PAAAAABJRU5ErkJggg==
</value>
  </data>
</root>